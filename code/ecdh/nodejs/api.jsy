import {ecc_nodejs_api} from '../../ecc/nodejs/api.jsy'

export @{}
  ecdh_nodejs_api as default,
  ecdh_nodejs_api as ecdh_api,

export function ecdh_nodejs_api({namedCurve, extractable}) ::
  const base_api = ecc_nodejs_api('ECDH', {namedCurve, extractable})
  return @{} __proto__: base_api,
    computeSecret(namedCurve, privateKey, publicKey, bits) ::
      return _nodejs_ecdh_computeSecret @
        privateKey, publicKey, bits


function _nodejs_ecdh_computeSecret(namedCurve, privateKey, publicKey, bits) ::
  return Promise.reject @ new Error @ "TODO"

export function ecdh_computeSecret(namedCurve, privateKey, publicKey, bits) ::
  return _nodejs_ecdh_computeSecret(namedCurve, privateKey, publicKey, bits)

export function __ecdh_generateKey(namedCurve) ::
  return new Promise @\ resolve, reject ::
    generateKeyPair @ 'ec', {namedCurve},
      @\ err, publicKey, privateKey ::
        if err :: return reject(err)

        const ecdh = @{}
          publicKey: createECDH(namedCurve)
          privateKey: createECDH(namedCurve)

        privateKey.export @:
          type: 'pkcs1', format: 'der'
        ecdh.privateKey.setPrivateKey(privateKey)
        ecdh.privateKey.keyobj = privateKey
        ecdh.privateKey.curve = namedCurve

        ecdh.publicKey.setPublicKey(publicKey)
        ecdh.publicKey.keyobj = publicKey
        ecdh.publicKey.curve = namedCurve

        return resolve(ecdh)


