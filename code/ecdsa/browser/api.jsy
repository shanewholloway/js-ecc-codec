const _ecc_curveForName = @{}
  'P-256': 'P-256', 'prime256v1': 'P-256', 'secp256r1': 'P-256',
  'P-384': 'P-384', 'secp384r1': 'P-384',
  'P-521': 'P-521', 'secp521r1': 'P-521',

export function ecdsa_generateKey(namedCurve) ::
  namedCurve = _ecc_curveForName[namedCurve]
  return crypto.subtle.generateKey @
    { name: 'ECDSA', namedCurve },
    true, ['sign', 'verify']

export function ecdsa_exportKey(format, ecdsa_key) ::
  return crypto.subtle.exportKey(format, ecdsa_key)

export function ecdsa_importPublicKey(namedCurve, format, ecdsa_key_info) ::
  namedCurve = _ecc_curveForName[namedCurve]
  return crypto.subtle.importKey @
    format, ecdsa_key_info,
    { name: 'ECDSA', namedCurve },
    true, ['verify']

export function ecdsa_importPrivateKey(namedCurve, format, ecdsa_key_info) ::
  namedCurve = _ecc_curveForName[namedCurve]
  return crypto.subtle.importKey @
    format, ecdsa_key_info,
    { name: 'ECDSA', namedCurve },
    true, ['sign']


const _sig_hashForName = @{} '': 'SHA256',
  'SHA256': 'SHA-256', 'SHA-256': 'SHA-256', 'sha256': 'SHA-256', 'sha-256': 'SHA-256',
  'SHA384': 'SHA-384', 'SHA-384': 'SHA-384', 'sha384': 'SHA-384', 'sha-384': 'SHA-384',
  'SHA512': 'SHA-512', 'SHA-512': 'SHA-512', 'sha512': 'SHA-512', 'sha-512': 'SHA-512',

export function ecdsa_signer(namedCurve, hash) ::
  hash = @{} name: ''+_sig_hashForName[hash.name || hash || '']

  return (ecdsa_privateKey, data) => ::
    if !namedCurve :: namedCurve = ecdsa_privateKey.crv || ecdsa_privateKey.curve || ecdsa_privateKey.namedCurve
    namedCurve = _ecc_curveForName[namedCurve]

    return crypto.subtle.sign @
      { name: 'ECDSA', namedCurve, hash },
      ecdsa_privateKey, data

export function ecdsa_verifer(namedCurve, hash) ::
  hash = @{} name: ''+_sig_hashForName[hash.name || hash || '']

  return (ecdsa_publicKey, signature, data) => ::
    if !namedCurve :: namedCurve = ecdsa_publicKey.crv || ecdsa_publicKey.curve || ecdsa_publicKey.namedCurve
    namedCurve = _ecc_curveForName[namedCurve]

    return crypto.subtle.verify @
      { name: 'ECDSA', namedCurve, hash },
      ecdsa_publicKey, signature, data,

